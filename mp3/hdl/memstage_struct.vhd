-- VHDL Entity ece411.MEMStage.interface
--
-- Created:
--          by - bhatia9.UNKNOWN (evrt-252-29.ews.illinois.edu)
--          at - 19:15:55 12/05/11
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY MEMStage IS
   PORT( 
      ALUresult        : IN     lc3b_word;
      CLK              : IN     std_logic;
      Mem_C_In         : IN     lc3b_word;
      SrcIn            : IN     lc3b_word;
      datamemin        : IN     lc3b_word;
      prevmemdataout   : IN     lc3b_word;
      prevmemwritedata : IN     lc3b_word;
      Mem_C_Out        : OUT    lc3b_word;
      dataaddr         : OUT    lc3b_word;
      memdataout       : OUT    lc3b_word;
      memwritedata     : OUT    lc3b_word
   );

-- Declarations

END MEMStage ;

--
-- VHDL Architecture ece411.MEMStage.struct
--
-- Created:
--          by - bhatia9.UNKNOWN (evrt-252-29.ews.illinois.edu)
--          at - 19:15:55 12/05/11
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;
LIBRARY mp3lib;

ARCHITECTURE struct OF MEMStage IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL CheckN             : std_logic;
   SIGNAL CheckP             : std_logic;
   SIGNAL CheckZ             : std_logic;
   SIGNAL DestReg            : lc3b_cc;
   SIGNAL GENMuxSel          : STD_LOGIC;
   SIGNAL GenCCout           : lc3b_cc;
   SIGNAL TrapDecider        : std_logic;
   SIGNAL beforeMEMWriteData : LC3B_WORD;
   SIGNAL brInst             : std_logic;
   SIGNAL gencc_in           : lc3b_word;
   SIGNAL is_byte            : std_logic;
   SIGNAL isldisti           : STD_LOGIC;
   SIGNAL lastbit            : std_logic;
   SIGNAL loadNZP            : std_logic;
   SIGNAL n                  : std_logic;
   SIGNAL p                  : std_logic;
   SIGNAL z                  : std_logic;


   -- Component Declarations
   COMPONENT GenCondCodes
   PORT (
      gencc_in : IN     lc3b_word ;
      GenCCout : OUT    lc3b_cc 
   );
   END COMPONENT;
   COMPONENT lastbitSTB
   PORT (
      ALUresult : IN     lc3b_word ;
      lastbit   : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT mem_C_decode
   PORT (
      Mem_C_In    : IN     lc3b_word ;
      DestReg     : OUT    lc3b_cc ;
      GENMuxSel   : OUT    STD_LOGIC ;
      TrapDecider : OUT    std_logic ;
      brInst      : OUT    std_logic ;
      is_byte     : OUT    std_logic ;
      isldisti    : OUT    STD_LOGIC ;
      loadNZP     : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT shiftbytedata
   PORT (
      datamemin  : IN     lc3b_word ;
      is_byte    : IN     std_logic ;
      lastbit    : IN     std_logic ;
      memdataout : OUT    lc3b_word 
   );
   END COMPONENT;
   COMPONENT srcRegshifter
   PORT (
      is_byte         : IN     std_logic ;
      lastbit         : IN     std_logic ;
      preMEMWriteData : IN     lc3b_word ;
      memwritedata    : OUT    lc3b_word 
   );
   END COMPONENT;
   COMPONENT theNZP
   PORT (
      CLK      : IN     std_logic ;
      GenCCout : IN     lc3b_cc ;
      loadNZP  : IN     std_logic ;
      n        : OUT    std_logic ;
      p        : OUT    std_logic ;
      z        : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT theNZPsplit
   PORT (
      CLK     : IN     std_logic ;
      DestReg : IN     lc3b_cc ;
      CheckN  : OUT    std_logic ;
      CheckP  : OUT    std_logic ;
      CheckZ  : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT wanna_branch
   PORT (
      CheckN      : IN     std_logic ;
      CheckP      : IN     std_logic ;
      CheckZ      : IN     std_logic ;
      TrapDecider : IN     std_logic ;
      brInst      : IN     std_logic ;
      lastbit     : IN     std_logic ;
      n           : IN     std_logic ;
      p           : IN     std_logic ;
      z           : IN     std_logic ;
      Mem_C_Out   : OUT    lc3b_word 
   );
   END COMPONENT;
   COMPONENT MUX2_16
   PORT (
      A   : IN     LC3B_WORD ;
      B   : IN     LC3B_WORD ;
      SEL : IN     STD_LOGIC ;
      F   : OUT    LC3B_WORD 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : GenCondCodes USE ENTITY ece411.GenCondCodes;
   FOR ALL : MUX2_16 USE ENTITY mp3lib.MUX2_16;
   FOR ALL : lastbitSTB USE ENTITY ece411.lastbitSTB;
   FOR ALL : mem_C_decode USE ENTITY ece411.mem_C_decode;
   FOR ALL : shiftbytedata USE ENTITY ece411.shiftbytedata;
   FOR ALL : srcRegshifter USE ENTITY ece411.srcRegshifter;
   FOR ALL : theNZP USE ENTITY ece411.theNZP;
   FOR ALL : theNZPsplit USE ENTITY ece411.theNZPsplit;
   FOR ALL : wanna_branch USE ENTITY ece411.wanna_branch;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   GenCC : GenCondCodes
      PORT MAP (
         gencc_in => gencc_in,
         GenCCout => GenCCout
      );
   STBinator : lastbitSTB
      PORT MAP (
         ALUresult => ALUresult,
         lastbit   => lastbit
      );
   decodin : mem_C_decode
      PORT MAP (
         Mem_C_In    => Mem_C_In,
         DestReg     => DestReg,
         GENMuxSel   => GENMuxSel,
         TrapDecider => TrapDecider,
         brInst      => brInst,
         is_byte     => is_byte,
         isldisti    => isldisti,
         loadNZP     => loadNZP
      );
   datashifter : shiftbytedata
      PORT MAP (
         datamemin  => datamemin,
         is_byte    => is_byte,
         lastbit    => lastbit,
         memdataout => memdataout
      );
   ShifterSrcReg : srcRegshifter
      PORT MAP (
         is_byte         => is_byte,
         lastbit         => lastbit,
         preMEMWriteData => beforeMEMWriteData,
         memwritedata    => memwritedata
      );
   NZPinator : theNZP
      PORT MAP (
         CLK      => CLK,
         GenCCout => GenCCout,
         loadNZP  => loadNZP,
         n        => n,
         p        => p,
         z        => z
      );
   splititator : theNZPsplit
      PORT MAP (
         CLK     => CLK,
         DestReg => DestReg,
         CheckN  => CheckN,
         CheckP  => CheckP,
         CheckZ  => CheckZ
      );
   I_wanna_branch : wanna_branch
      PORT MAP (
         CheckN      => CheckN,
         CheckP      => CheckP,
         CheckZ      => CheckZ,
         TrapDecider => TrapDecider,
         brInst      => brInst,
         lastbit     => lastbit,
         n           => n,
         p           => p,
         z           => z,
         Mem_C_Out   => Mem_C_Out
      );
   U_0 : MUX2_16
      PORT MAP (
         A   => ALUresult,
         B   => datamemin,
         SEL => GENMuxSel,
         F   => gencc_in
      );
   U_1 : MUX2_16
      PORT MAP (
         A   => ALUresult,
         B   => prevmemdataout,
         SEL => isldisti,
         F   => dataaddr
      );
   U_2 : MUX2_16
      PORT MAP (
         A   => SrcIn,
         B   => prevmemwritedata,
         SEL => isldisti,
         F   => beforeMEMWriteData
      );

END struct;
