-- VHDL Entity ece411.IDStage.interface
--
-- Created:
--          by - bhatia9.UNKNOWN (gelib-057-15.ews.illinois.edu)
--          at - 21:54:35 10/27/11
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY IDStage IS
   PORT( 
      ID_C_In  : IN     lc3b_word;
      OutA     : IN     lc3b_word;
      OutB     : IN     lc3b_word;
      instIn   : IN     lc3b_word;
      nextPCin : IN     lc3b_word;
      ALUInA   : OUT    lc3b_word;
      ALUInB   : OUT    lc3b_word;
      ID_C_Out : OUT    lc3b_word;
      RA       : OUT    lc3b_reg;
      RB       : OUT    lc3b_reg;
      instOut  : OUT    lc3b_word;
      newPC    : OUT    lc3b_word
   );

-- Declarations

END IDStage ;

--
-- VHDL Architecture ece411.IDStage.struct
--
-- Created:
--          by - bhatia9.UNKNOWN (gelib-057-15.ews.illinois.edu)
--          at - 21:54:35 10/27/11
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;

ARCHITECTURE struct OF IDStage IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL ALUMuxSel  : LC3b_8MUX_SEL;
   SIGNAL Imm5       : LC3b_word;
   SIGNAL Instr11    : lc3b_offset11;
   SIGNAL Instr5     : lc3b_imm5;
   SIGNAL Instr6     : lc3b_index6;
   SIGNAL Instr9     : lc3b_offset9;
   SIGNAL Offset6    : LC3b_word;
   SIGNAL PCOffset11 : LC3b_word;
   SIGNAL PCOffset9  : LC3b_word;


   -- Component Declarations
   COMPONENT ID_C_Decode
   PORT (
      ID_C_In   : IN     lc3b_word ;
      ALUMuxSel : OUT    LC3b_8MUX_SEL 
   );
   END COMPONENT;
   COMPONENT InstrRipper
   PORT (
      instIn  : IN     lc3b_word ;
      Instr11 : OUT    lc3b_offset11 ;
      Instr5  : OUT    lc3b_imm5 ;
      Instr6  : OUT    lc3b_index6 ;
      Instr9  : OUT    lc3b_offset9 
   );
   END COMPONENT;
   COMPONENT SEXT
   PORT (
      Instr11    : IN     lc3b_offset11 ;
      Instr5     : IN     lc3b_imm5 ;
      Instr6     : IN     lc3b_index6 ;
      Instr9     : IN     lc3b_offset9 ;
      Imm5       : OUT    LC3b_word ;
      Offset6    : OUT    LC3b_word ;
      PCOffset11 : OUT    LC3b_word ;
      PCOffset9  : OUT    LC3b_word 
   );
   END COMPONENT;
   COMPONENT WordMux8
   PORT (
      A   : IN     LC3b_word ;
      B   : IN     LC3b_word ;
      C   : IN     LC3b_word ;
      D   : IN     LC3b_word ;
      E   : IN     LC3b_word ;
      F   : IN     LC3b_word ;
      G   : IN     LC3b_word ;
      H   : IN     LC3b_word ;
      Sel : IN     LC3b_8MUX_SEL ;
      O   : OUT    LC3b_word 
   );
   END COMPONENT;
   COMPONENT Worthless
   PORT (
      In0  : IN     LC3b_word ;
      Out0 : OUT    LC3b_word 
   );
   END COMPONENT;
   COMPONENT regExtractor
   PORT (
      instIn : IN     lc3b_word ;
      RA     : OUT    lc3b_reg ;
      RB     : OUT    lc3b_reg 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : ID_C_Decode USE ENTITY ece411.ID_C_Decode;
   FOR ALL : InstrRipper USE ENTITY ece411.InstrRipper;
   FOR ALL : SEXT USE ENTITY ece411.SEXT;
   FOR ALL : WordMux8 USE ENTITY ece411.WordMux8;
   FOR ALL : Worthless USE ENTITY ece411.Worthless;
   FOR ALL : regExtractor USE ENTITY ece411.regExtractor;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   Decodinator : ID_C_Decode
      PORT MAP (
         ID_C_In   => ID_C_In,
         ALUMuxSel => ALUMuxSel
      );
   Ripper : InstrRipper
      PORT MAP (
         instIn  => instIn,
         Instr11 => Instr11,
         Instr5  => Instr5,
         Instr6  => Instr6,
         Instr9  => Instr9
      );
   SEXTinator : SEXT
      PORT MAP (
         Instr11    => Instr11,
         Instr5     => Instr5,
         Instr6     => Instr6,
         Instr9     => Instr9,
         Imm5       => Imm5,
         Offset6    => Offset6,
         PCOffset11 => PCOffset11,
         PCOffset9  => PCOffset9
      );
   ALUMux : WordMux8
      PORT MAP (
         A   => OutB,
         B   => nextPCin,
         C   => Imm5,
         D   => PCOffset9,
         E   => PCOffset11,
         F   => Offset6,
         G   => Offset6,
         H   => Offset6,
         Sel => ALUMuxSel,
         O   => ALUInB
      );
   terriBAD : Worthless
      PORT MAP (
         In0  => OutA,
         Out0 => ALUInA
      );
   terriBAD1 : Worthless
      PORT MAP (
         In0  => instIn,
         Out0 => instOut
      );
   Extractinator : regExtractor
      PORT MAP (
         instIn => instIn,
         RA     => RA,
         RB     => RB
      );

END struct;
