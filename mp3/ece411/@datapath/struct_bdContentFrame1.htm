<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <title>ece411/Datapath/struct_bd</title>
   <!-- Generated by HDL Designer -->
<!--    at 00:57:48 on 09/15/11 -->

   <script language='javascript'>
   
   function pagesBtn() {
      return '';
   }

   function panelmenu() {
      return '';
   }

   </script>

<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">

<style type="text/css">
  td.odd    {border-bottom-width: 1px;border-top-width: 1px;
             border-left-width: 1px;border-right-width: 1px;
             border-style: solid;
             background-color: #EEEEEE}
  td.even   {border-bottom-width: 1px;border-top-width: 1px;
             border-left-width: 1px;border-right-width: 1px;
             border-style: solid;
             background-color: #FAFAFA}
  th.odd   {border-bottom-width: 1px;border-top-width: 1px;
             border-left-width: 1px;border-right-width: 1px;
             border-style: solid;
             background-color: #80CCCC}
  th.even  {border-bottom-width: 1px;border-top-width: 1px;
             border-left-width: 1px;border-right-width: 1px;
             border-style: solid;
             background-color: #90CCCC}
  pre.indent {position:relative;left: 10px;top: 0px}
</style>
</head>

<body>
<H4>Generation Settings</H4>
<TABLE>
<TR><TD CLASS=odd>Component declarations</TD><TD CLASS=even>yes</TD></TR>
<TR><TD ROWSPAN=3 VALIGN=top CLASS=odd>Configurations</TD><TD CLASS=even>embedded statements</TD></TR>
<TR><TD CLASS=even>add pragmas</TD></TR>
<TR><TD CLASS=even>exclude view name</TD></TR>
</TABLE>
<H4>Declarations</H4>
<H4>Ports:</H4>
<pre CLASS=indent>
ADDRESS       : LC3b_word
ALUop         : LC3b_aluop
CheckN        : <span class=T>std_logic</span>
CheckP        : <span class=T>std_logic</span>
CheckZ        : <span class=T>std_logic</span>
DATAIN        : LC3b_word
DATAOUT       : LC3b_word
LoadIR        : <span class=T>std_logic</span>
LoadMar       : <span class=T>std_logic</span>
LoadMDR       : <span class=T>std_logic</span>
LoadNZP       : <span class=T>std_logic</span>
LoadPC        : <span class=T>std_logic</span>
MARMuxSel     : LC3b_4Mux_Sel
MDRMuxSel     : <span class=T>std_logic</span>
n             : <span class=T>std_logic</span>
Opcode        : LC3b_opcode
p             : <span class=T>std_logic</span>
PCMuxSel      : LC3b_8Mux_Sel
RegWrite      : <span class=T>std_logic</span>
RESET_L       : <span class=T>std_logic</span>
RFMuxSel      : LC3b_4Mux_Sel
StoreSR       : <span class=T>std_logic</span>
z             : <span class=T>std_logic</span>
clk           : <span class=T>std_logic</span>
ALUMuxSel     : LC3b_8Mux_Sel
IMMEDIATE     : <span class=T>std_logic</span>
JSRR          : <span class=T>std_logic</span>
R7Sel_H       : <span class=T>std_logic</span>
ByteExtSel    : <span class=T>std_logic</span>
ADDR_0        : <span class=T>std_logic</span>
SHIFTop       : lc3b_shftop</pre>
<H4>Diagram Signals:</H4>
<pre CLASS=indent>
<span class=K>SIGNAL</span> MARMuxout     : LC3b_word
<span class=K>SIGNAL</span> PCout         : LC3b_word
<span class=K>SIGNAL</span> PCMuxout      : LC3b_word
<span class=K>SIGNAL</span> RFMuxout      : LC3b_word
<span class=K>SIGNAL</span> MDRout        : LC3b_word
<span class=K>SIGNAL</span> MDRMuxout     : LC3b_word
<span class=K>SIGNAL</span> ALUMuxout     : LC3b_word
<span class=K>SIGNAL</span> ALUout        : LC3b_word
<span class=K>SIGNAL</span> GenCCout      : LC3b_cc
<span class=K>SIGNAL</span> Dest          : LC3b_reg
<span class=K>SIGNAL</span> ADJ6out       : LC3b_word
<span class=K>SIGNAL</span> RFBout        : LC3b_word
<span class=K>SIGNAL</span> SrcB          : LC3b_reg
<span class=K>SIGNAL</span> index6        : LC3b_index6
<span class=K>SIGNAL</span> SrcA          : LC3b_reg
<span class=K>SIGNAL</span> RFAout        : LC3b_word
<span class=K>SIGNAL</span> StoreMuxout   : LC3b_reg
<span class=K>SIGNAL</span> PCPlus2out    : LC3b_word
<span class=K>SIGNAL</span> ADJ9out       : LC3b_word
<span class=K>SIGNAL</span> offset9       : LC3b_offset9
<span class=K>SIGNAL</span> imm5          : LC3b_imm5
<span class=K>SIGNAL</span> SEXTout       : LC3b_word
<span class=K>SIGNAL</span> Adj9PC        : LC3b_word
<span class=K>SIGNAL</span> JmpAlignedAdr : LC3b_word
<span class=K>SIGNAL</span> Adj11PC       : LC3b_word
<span class=K>SIGNAL</span> offset11      : LC3b_offset11
<span class=K>SIGNAL</span> ADJ11out      : LC3b_word
<span class=K>SIGNAL</span> DestReg       : LC3b_reg
<span class=K>SIGNAL</span> SEXT6out      : LC3b_word
<span class=K>SIGNAL</span> ByteExtout    : LC3b_word
<span class=K>SIGNAL</span> ByteCopyout   : LC3b_word
<span class=K>SIGNAL</span> imm4          : LC3b_imm4
<span class=K>SIGNAL</span> ZEXT4out      : lc3b_word
<span class=K>SIGNAL</span> AdjTrapout    : LC3b_word
<span class=K>SIGNAL</span> TrapVect      : LC3b_trapvect8</pre>
<H4>Pre User:</H4>
<pre CLASS=indent>
</pre>
<H4>Post User:</H4>
<pre CLASS=indent>
</pre>
<H4>Package List</H4>
<pre CLASS=indent>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.NUMERIC_STD.<span class=K>all</span>;

<span class=K>LIBRARY</span> ece411;
<span class=K>USE</span> ece411.LC3b_types.<span class=K>all</span>;</pre>
<H4>Bundles</H4>
<TABLE>
</TABLE>


<SCRIPT SRC="../../scripts/is.js">
</SCRIPT>
<SCRIPT SRC="../../scripts/imageFrame.js">
</SCRIPT>

</body>
</html>


